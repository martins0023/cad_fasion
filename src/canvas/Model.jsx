/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 model.glb 
Author: SayuriCreatesStuff (https://sketchfab.com/sayuriauthor)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/long-dress-with-splitted-sides-f633978f702e425faa870a8be5ed0dc1
Title: Long dress with splitted sides
*/

import React, { useRef, useEffect, useState  } from 'react'
import  { easing } from 'maath';
import { useSnapshot } from 'valtio';
import { useFrame } from '@react-three/fiber';
import { Decal, OrbitControls, useGLTF, useTexture } from '@react-three/drei';
import state from '../store';

const Model = (props) => {
  const group = useRef();

  const snap = useSnapshot(state);

  const logoTexture = useTexture(snap.logoDecal);
  const fullTexture = useTexture(snap.fullDecal);
  
  const stateString = JSON.stringify(snap);

  const scale = [0.13, 0.1, 0.1];  // Adjust as needed
  const position = [0, -1, 0];    // Adjust as needed
  const rotation = [1.5, Math.PI, 3.2];

  const { scene, nodes, materials } = useGLTF('/models/model.glb')

  const lamb = "Scene_-_Root";


  return (
    <group key={stateString} ref={group} scale={scale} position={position} rotation={rotation}>
        <mesh
          castShadow
          geometry={nodes.Plane002__0.geometry} 
          material={materials["Scene_-_Root"]}
          material-roughness={1}
          dispose={null} 
          >
            {snap.isFullTexture && (
                <Decal 
                    position={[0, 0, 0]}
                    rotation={[0, 0, 0]}
                    scale={10}
                    map={fullTexture}
                />
            )}

            {snap.isLogoTexture && (
                <Decal 
                    position={[0, 0.04, 0.15]}
                    rotation={[0, 0, 0]}
                    scale={0.15}
                    map={logoTexture}
                    anisotropy={20}
                    depthTest={false}
                    depthWrite={true}
                />
            )}
          </mesh>
    </group>
  )
};
export default Model;

useGLTF.preload('/models/model.glb')
